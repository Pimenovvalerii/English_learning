{"version":3,"sources":["componets/header/header.js","componets/main/main.js","componets/vocabulary/vocabulary.js","componets/vocabulary/nambers.js","componets/vocabulary/unit_1.js","componets/vocabulary/unit_2.js","componets/App.js","serviceWorker.js","index.js"],"names":["Header","props","state","lesson","handleSelectChange","bind","arrOption","this","selected","map","el","id","key","event","lessonsCallBack","target","value","element","renderOption","className","onChange","React","Component","Main","inputValue","word","elem","language","answer","help","border","result","handleSubmit","handleChange","randomElem","handleHelp","array","Math","floor","random","length","setState","preventDefault","lessons","boxShadow","setTimeout","vocabulary","rendering","disabled","hidden","onClick","style","onSubmit","placeholder","type","numbers","Eng","Ru","unit_1","unit_2","App","styleblock","styleApp","onClickYes","onClickNo","Object","keys","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uSAMqBA,G,kBAEjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,OAAS,MAGb,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBANZ,E,4EAUd,IAAIC,EAAYC,KAAKN,MAAMO,SAM3B,OAHAF,EAAYA,EAAUG,KAAK,SAACC,EAAGC,GAC3B,OAAO,4BAAQC,IAAKD,GAAMD,Q,yCAKfG,GACXN,KAAKN,MAAMa,gBAAgBD,EAAME,OAAOC,S,+BAK5C,IAAMC,EAAUV,KAAKW,eAErB,OACI,yBAAKC,UAAU,UACX,uDAIA,4BAAQC,SAAUb,KAAKH,oBACnB,6GACCa,Q,GArCeI,IAAMC,YCFrBC,G,kBAEjB,WAAYtB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTsB,WAAW,GACXC,KAAO,GACPC,KAAO,KACPC,SAAU,KACVC,OAAS,KACTC,KAAO,KACPC,OAAQ,OACRC,OAAS,CAAC,MAAU,QAIxB,EAAKC,aAAe,EAAKA,aAAa3B,KAAlB,gBACpB,EAAK4B,aAAe,EAAKA,aAAa5B,KAAlB,gBACpB,EAAKD,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAK6B,WAAa,EAAKA,WAAW7B,KAAhB,gBAClB,EAAK8B,WAAa,EAAKA,WAAW9B,KAAhB,gBAlBJ,E,wEAqBN+B,GACR,IACMV,EAAOU,EADGC,KAAKC,MAAOD,KAAKE,SAASH,EAAMI,SAEhDjC,KAAKkC,SAAS,CAACf,W,mCAINb,GAAQ,IAAD,OAChBA,EAAM6B,iBACN,IAAMvC,EAASI,KAAKN,MAAM0C,QACpBjB,EAAOnB,KAAKL,MAAMwB,KAClBC,EAAmC,QAAxBpB,KAAKL,MAAMyB,SAAqB,MAAQ,KAEtDpB,KAAKL,MAAMsB,aAAeE,EAAKC,IAE9BpB,KAAKkC,SAAS,CACVjB,WAAa,GACbI,OAAQ,yDACRC,KAAO,KACPE,OAAQ,CAAC,MAAU,WAIvBxB,KAAKN,MAAM2C,UAAU,CAAE,UAAa,kDAEpCC,YAAY,WACR,EAAKJ,SAAS,CAACb,OAAS,OAC1B,OAGFrB,KAAKkC,SAAS,CACVjB,WAAa,GACbI,OAAO,kGAAD,OAAyBF,EAAKC,IACpCE,KAAO,KACPE,OAAQ,CAAC,MAAU,SAIvBxB,KAAKN,MAAM2C,UAAU,CAAE,UAAa,iDACpCC,YAAY,WACR,EAAKJ,SAAS,CAAEb,OAAO,OACzB,MAGNiB,YAAW,WACP,EAAKX,WAAW,EAAKjC,MAAM6C,WAAW3C,MACxC,O,mCAKOU,GACTN,KAAKkC,SAAU,CAAEjB,WAAYX,EAAME,OAAOC,U,yCAG3BH,GAEf,IAAMV,EAASI,KAAKN,MAAM0C,QAC1BpC,KAAKkC,SAAS,CAACd,SAAUd,EAAME,OAAOC,QACtCT,KAAK2B,WAAW3B,KAAKN,MAAM6C,WAAW3C,M,mCAKtC,IAAMwB,EAAmC,QAAxBpB,KAAKL,MAAMyB,SAAqB,MAAQ,KACnDD,EAAOnB,KAAKL,MAAMwB,KACxBnB,KAAKkC,SAAS,CAACZ,KAAOH,EAAKC,O,kCAI3B,IAAMA,EAAWpB,KAAKL,MAAMyB,SACxBF,EAAO,KAEX,GAAe,MAAZE,EAAiB,CAChB,IAAMf,EAAMyB,KAAKC,MAAoB,IAAdD,KAAKE,UAC5Bd,EAAO,wBAAIb,IAAKA,GAAOL,KAAKL,MAAMwB,KAAKC,IAG3C,OAAOF,I,+BAGF,IAGEG,EAAUrB,KAAKL,MAAf0B,OACAC,EAAQtB,KAAKL,MAAb2B,KACDJ,EAAOlB,KAAKwC,YAEZJ,EAAkC,OAAvBpC,KAAKN,MAAM0C,SACe,8EAAvBpC,KAAKN,MAAM0C,QAEzBK,IAAoC,OAAxBzC,KAAKL,MAAMyB,UACe,8EAAxBpB,KAAKL,MAAMyB,WACXgB,GAEpB,OACI,yBAAKxB,UAAU,QACX,6BACI,4BACI8B,OAAQN,EACRvB,SAAUb,KAAKH,oBAEf,6GACA,sCACA,yCAMR,yBAAKe,UAAU,aAEX,yBAAKA,UAAU,QACX,4BAAQ+B,QAAS3C,KAAK4B,WACda,SAAUA,GADlB,0DAKA,0BAAM7B,UAAU,QACXU,IAIT,yBAAKsB,MAAO5C,KAAKL,MAAM6B,OACnBZ,UAAU,UACTS,GAGL,yBAAKT,UAAU,QACX,4BAAKM,KAMb,yBAAKN,UAAU,QACX,0BAAMiC,SAAU7C,KAAKyB,cACjB,2BACAb,UAAU,QACVkC,YAAY,iBACZC,KAAK,OACDtC,MAAOT,KAAKL,MAAMsB,WAClBJ,SAAUb,KAAK0B,eAEnB,4BACAd,UAAU,MACN6B,SAAUA,GAFd,e,GAvKU3B,IAAMC,YCIzBwB,EAJI,CACfS,QCLY,CACZ,CAACC,IAAK,MAAMC,GAAG,KACf,CAACD,IAAK,MAAMC,GAAG,KACf,CAACD,IAAK,MAAMC,GAAG,KACf,CAACD,IAAK,MAAMC,GAAG,KACf,CAACD,IAAK,MAAMC,GAAG,KACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,oCDRPC,OELG,CACX,CAACF,IAAK,MAAMC,GAAG,kCACf,CAACD,IAAK,OAAOC,GAAG,kCAChB,CAACD,IAAK,SAASC,GAAG,wCAClB,CAACD,IAAK,MAAMC,GAAG,wCACf,CAACD,IAAK,WAAWC,GAAG,oDACpB,CAACD,IAAK,OAAOC,GAAG,8CAChB,CAACD,IAAK,YAAYC,GAAG,0DACrB,CAACD,IAAK,QAAQC,GAAG,sEACjB,CAACD,IAAK,KAAKC,GAAG,sEACd,CAACD,IAAK,QAAQC,GAAG,sBACjB,CAACD,IAAK,cAAcC,GAAG,wEACvB,CAACD,IAAK,OAAOC,GAAG,sBAChB,CAACD,IAAK,SAASC,GAAG,kCAClB,CAACD,IAAK,aAAaC,GAAG,gEACtB,CAACD,IAAK,WAAWC,GAAG,8CACpB,CAACD,IAAK,UAAUC,GAAG,8CACnB,CAACD,IAAK,aAAaC,GAAG,0DACtB,CAACD,IAAK,SAASC,GAAG,8CAClB,CAACD,IAAK,OAAOC,GAAG,sBAChB,CAACD,IAAK,YAAYC,GAAG,uEACrB,CAACD,IAAK,OAAOC,GAAG,sBAChB,CAACD,IAAK,KAAKC,GAAG,sBACd,CAACD,IAAK,MAAMC,GAAG,sBACf,CAACD,IAAK,MAAMC,GAAG,gBACf,CAACD,IAAK,MAAMC,GAAG,sBACf,CAACD,IAAK,MAAMC,GAAG,sBACf,CAACD,IAAK,OAAOC,GAAG,sBAChB,CAACD,IAAK,QAAQC,GAAG,iBFvBFE,OGLJ,CACX,CAACH,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,mCACf,CAACD,IAAK,MAAMC,GAAG,qCCNEG,G,kBACnB,WAAY3D,GAAO,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACXyC,QAAQ,KACRM,QAAQ,EACRE,MAAO,CAAC,QAAY,SACpBU,WAAa,CAAC,QAAY,SAC1BC,SAAU,MAGZ,EAAKhD,gBAAkB,EAAKA,gBAAgBT,KAArB,gBACvB,EAAK0D,WAAa,EAAKA,WAAW1D,KAAhB,gBAClB,EAAK2D,UAAY,EAAKA,UAAU3D,KAAf,gBACjB,EAAKuC,UAAY,EAAKA,UAAUvC,KAAf,gBAbD,E,uEAkBhB,OAAO4D,OAAOC,KAAKpB,K,sCAGLH,GAEdpC,KAAKkC,SAAS,CAACE,c,mCAIfpC,KAAKkC,SAAU,CAACU,MAAQ,CAAC,QAAY,a,kCAG3B,IAAD,OACP5C,KAAKkC,SAAU,CACbQ,QAAS,EACTY,WAAa,CAAC,QAAY,UAE9BhB,YAAY,WACV,EAAKJ,SAAU,CACbQ,QAAS,EACTY,WAAa,CAAC,QAAY,YAC5B,O,gCAGMV,GAAO,IAAD,OACd5C,KAAKkC,SAAS,CAAEqB,SAAUX,IAE1BN,YAAY,WACV,EAAKJ,SAAS,CAAEqB,SAAU,CAAE,UAAa,YACzC,O,+BAMF,OACE,yBAAK3C,UAAU,MAAMgC,MAAO5C,KAAKL,MAAM4D,UACrC,yBAAMX,MAAO5C,KAAKL,MAAMiD,MAClBhC,UAAU,WACZ,4BACE+B,QAAS3C,KAAKwD,WACdd,OAAQ1C,KAAKL,MAAM+C,QAFrB,QAIA,4BACEC,QAAS3C,KAAKyD,UACdf,OAAQ1C,KAAKL,MAAM+C,QAFrB,QAIA,yBAAKE,MAAQ5C,KAAKL,MAAM2D,YAAxB,6DAEJ,kBAAC,EAAD,CAAQrD,SAAUD,KAAKoC,UAAW7B,gBAAiBP,KAAKO,kBACxD,kBAAC,EAAD,CAAMgC,WAAYA,EAAYH,QAASpC,KAAKL,MAAMyC,QAASC,UAAWrC,KAAKqC,iB,GArElDvB,IAAMC,YCKnB6C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.302a7aca.chunk.js","sourcesContent":["import React from 'react';\r\nimport { render } from 'react-dom';\r\n\r\nimport './header.css'\r\n\r\n\r\nexport default class Header extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            lesson : null,\r\n        }\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this)\r\n    }\r\n\r\n    renderOption(){\r\n        let arrOption = this.props.selected;\r\n\r\n        \r\n        arrOption = arrOption.map( (el,id) => {\r\n            return <option key={id} >{el}</option>\r\n        })\r\n        return arrOption;\r\n    }\r\n\r\n    handleSelectChange(event){\r\n            this.props.lessonsCallBack(event.target.value)\r\n    }\r\n\r\n    render(){\r\n\r\n        const element = this.renderOption()\r\n        \r\n        return (\r\n            <div className=\"header\">\r\n                <div>\r\n                I will learn the words\r\n                </div>\r\n\r\n                <select onChange={this.handleSelectChange}>\r\n                    <option>Вибирите урок</option>\r\n                    {element}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport './main.css';\r\n\r\nexport default class Main extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            inputValue:'',\r\n            word : '',\r\n            elem : null,\r\n            language: null,\r\n            answer : null,\r\n            help : null,\r\n            border: 'none',\r\n            result : {'color' : 'red'}\r\n        }\r\n        \r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSelectChange = this.handleSelectChange.bind(this)\r\n        this.randomElem = this.randomElem.bind(this)\r\n        this.handleHelp = this.handleHelp.bind(this)\r\n    }\r\n\r\n    randomElem( array) {\r\n        const randNum = Math.floor( Math.random()*array.length)\r\n        const elem = array[randNum];\r\n        this.setState({elem})\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const lesson = this.props.lessons;\r\n        const elem = this.state.elem;\r\n        const language = this.state.language !== 'Eng' ? 'Eng' : 'Ru';\r\n        \r\n        if(this.state.inputValue === elem[language]){\r\n            \r\n            this.setState({\r\n                inputValue : '',\r\n                answer: 'Правильно',\r\n                help : null,\r\n                result: {'color' : 'green'},\r\n                }\r\n            )\r\n\r\n            this.props.boxShadow({ 'boxShadow': 'inset 0px 0px 16px 60px rgba(151, 190, 0, 0.4'})\r\n            \r\n            setTimeout( ()=>{\r\n                this.setState({answer : ''})                                  \r\n            },4000)\r\n        } else {\r\n            \r\n            this.setState({\r\n                inputValue : '',\r\n                answer: `Правильное слово :  ${elem[language]}`,\r\n                help : null,\r\n                result: {'color' : 'red'},\r\n                }\r\n            )\r\n           \r\n            this.props.boxShadow({ 'boxShadow': 'inset 0px 0px 16px 60px rgba(255, 0, 0, 0.4)'})\r\n            setTimeout( ()=>{\r\n                this.setState({ answer:''})\r\n            },4000)\r\n        } \r\n\r\n        setTimeout(()=>{\r\n            this.randomElem(this.props.vocabulary[lesson])\r\n        },4000)\r\n\r\n        \r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState( { inputValue: event.target.value});\r\n    }\r\n\r\n    handleSelectChange(event) {\r\n\r\n        const lesson = this.props.lessons\r\n        this.setState({language: event.target.value});\r\n        this.randomElem(this.props.vocabulary[lesson]);\r\n        \r\n    }\r\n\r\n    handleHelp(){\r\n        const language = this.state.language !== 'Eng' ? 'Eng' : 'Ru';\r\n        const elem = this.state.elem;\r\n        this.setState({help : elem[language ]})\r\n    }\r\n\r\n    rendering(){\r\n        const language = this.state.language;\r\n        let word = null;\r\n\r\n        if(language != null){\r\n            const key = Math.floor(Math.random()*2000)\r\n            word = <li key={key} >{this.state.elem[language]}</li> \r\n        }\r\n\r\n        return word;\r\n    }\r\n\r\n    render(){\r\n\r\n        \r\n        const {answer} = this.state;\r\n        const {help} = this.state;\r\n        const word = this.rendering();\r\n        \r\n        const lessons = (this.props.lessons === null || \r\n                            this.props.lessons === 'Вибирите урок') ? \r\n                            true : false;\r\n        const disabled = (this.state.language === null ||\r\n                            this.state.language === 'Выберите язык' ||\r\n                            lessons ? true : false ) \r\n                            \r\n        return (\r\n            <div className=\"main\">\r\n                <div>\r\n                    <select  \r\n                        hidden={lessons}\r\n                        onChange={this.handleSelectChange}\r\n                    >\r\n                        <option >Выберите язык</option>\r\n                        <option>Ru</option>\r\n                        <option>Eng</option>\r\n                    </select>\r\n\r\n                    \r\n                </div>\r\n\r\n                <div className=\"wrap-main\">\r\n                                       \r\n                    <div className=\"help\">\r\n                        <button onClick={this.handleHelp}\r\n                                disabled={disabled}\r\n                        >\r\n                            Подсказка\r\n                        </button>\r\n                        <span className=\"help\">\r\n                            {help}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div style={this.state.result}\r\n                        className=\"result\">\r\n                        {answer}\r\n                    </div>\r\n\r\n                    <div className=\"word\">\r\n                        <ul>{word}</ul>\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                \r\n                <div className=\"form\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input \r\n                        className=\"input\"\r\n                        placeholder='enter the word'\r\n                        type=\"text\" \r\n                            value={this.state.inputValue}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <button \r\n                        className=\"btn\"\r\n                            disabled={disabled}\r\n                        >\r\n                            next\r\n                        </button>\r\n                    </form>\r\n        \r\n                </div>  \r\n            </div>\r\n        )\r\n    }  \r\n}\r\n","import numbers from './nambers'\r\nimport unit_1 from './unit_1';\r\nimport unit_2 from './unit_2';\r\n\r\nconst vocabulary = {\r\n    numbers,unit_1,unit_2\r\n}\r\n\r\nexport default vocabulary;","const numbers = [\r\n    {Eng: 'bag',Ru:'1'},\r\n    {Eng: 'bag',Ru:'2'},\r\n    {Eng: 'bag',Ru:'3'},\r\n    {Eng: 'bag',Ru:'4'},\r\n    {Eng: 'bag',Ru:'5'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n];\r\n\r\nexport default numbers;","const unit_1 = [\r\n    {Eng: 'bag',Ru:'Сумка'},\r\n    {Eng: 'book',Ru:'Книга'},\r\n    {Eng: 'camera',Ru:'Камера'},\r\n    {Eng: 'car',Ru:'Машина'},\r\n    {Eng: 'computer',Ru:'Компютер'},\r\n    {Eng: 'fine',Ru:'Отлично'},\r\n    {Eng: 'hamburger',Ru:'Гамбургер'},\r\n    {Eng: 'hello',Ru:'Здраствуйте'},\r\n    {Eng: 'hi',Ru:'Здраствуйте'},\r\n    {Eng: 'house',Ru:'Дом'},\r\n    {Eng: 'How are you',Ru:'Как ваши дела'},\r\n    {Eng: 'name',Ru:'Имя'},\r\n    {Eng: 'number',Ru:'Число'},\r\n    {Eng: 'photograph',Ru:'Фотография'},\r\n    {Eng: 'sandwich',Ru:'Сэндвич'},\r\n    {Eng: 'student',Ru:'Студент'},\r\n    {Eng: 'television',Ru:'Телевизор'},\r\n    {Eng: 'thanks',Ru:'Спасибо'},\r\n    {Eng: 'this',Ru:'Это'},\r\n    {Eng: 'wery well',Ru:'Очень хорошо'},\r\n    {Eng: 'what',Ru:'ЧТо'},\r\n    {Eng: 'my',Ru:'Мой'},\r\n    {Eng: 'his',Ru:'Его'},\r\n    {Eng: 'her',Ru:'Ее'},\r\n    {Eng: 'its',Ru:'Его'},\r\n    {Eng: 'our',Ru:'Наш'},\r\n    {Eng: 'your',Ru:'Ваш'},\r\n    {Eng: 'their',Ru:'Их'},  \r\n]\r\n\r\nexport default unit_1;","const unit_2 = [\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n    {Eng: 'bag',Ru:'Сумка1'},\r\n\r\n]\r\n\r\nexport default unit_2;","import React from 'react';\nimport Header from './header/header';\nimport Main from './main/main';\nimport vocabulary from './vocabulary/vocabulary';\nimport './App.css'\n\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      lessons:null,\n      hidden: false,\n      style: {'display' : ' none'},\n      styleblock : {'display' : ' none'},\n      styleApp: null,\n    }\n\n    this.lessonsCallBack = this.lessonsCallBack.bind(this);\n    this.onClickYes = this.onClickYes.bind(this);\n    this.onClickNo = this.onClickNo.bind(this);\n    this.boxShadow = this.boxShadow.bind(this);\n  }\n\n  lessons(){\n    \n    return Object.keys(vocabulary)\n  }\n\n  lessonsCallBack(lessons){\n\n    this.setState({lessons})\n  }\n\n  onClickYes(){\n    this.setState( {style : {'display' : ' none'}})\n  }\n\n  onClickNo(){\n      this.setState( {\n        hidden : true,\n        styleblock : {'display' : 'flex'}})\n      \n    setTimeout( ()=>{\n      this.setState( {\n        hidden : false,\n        styleblock : {'display' : 'none'}})\n    },2000)\n  }\n\n  boxShadow(style){\n    this.setState({ styleApp: style })\n\n    setTimeout( ()=>{\n      this.setState({ styleApp: { 'boxShadow': 'none'} })\n    },4000)\n  }\n\n  render(){\n\n  \n    return (\n      <div className=\"app\" style={this.state.styleApp}>\n        <div  style={this.state.style}\n              className=\"welcome\">\n            <button \n              onClick={this.onClickYes}\n              hidden={this.state.hidden} >yes!</button>\n            \n            <button   \n              onClick={this.onClickNo}\n              hidden={this.state.hidden} >no:(</button>\n\n            <div style={ this.state.styleblock}>Надо учить </div>\n        </div>\n        <Header selected={this.lessons()} lessonsCallBack={this.lessonsCallBack}  />\n        <Main vocabulary={vocabulary} lessons={this.state.lessons} boxShadow={this.boxShadow}/>\n        \n      </div>\n    );\n  }\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './componets/App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}